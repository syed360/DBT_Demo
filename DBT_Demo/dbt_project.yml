
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'DBT_Demo'
version: '1.0.0'
config-version: 2

vars:
  current_champion : Lakers



# This setting configures which "profile" dbt uses for this project.
profile: 'snowflake'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]



clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# on-run-start: "insert into demo_db.staging.dbt_audit (audit_type) values ('on_run_srt'); commit;"
# on-run-end: "insert into demo_db.staging.dbt_audit (audit_type) values ('on_run_end'); commit;"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  pre-hook : '{{insert_audits("pre-hook")}}'
  post-hook : '{{insert_audits("post-hook")}}'
  DBT_Demo:
    # Config indicated by + and applies to all files under models/example/
    staging:
      # +materialized: table
      +materialized: view
      +schema: staging 

    snowflake_sample_data:
      +materialized: view
      +schema: staging
      
seeds:
  DBT_Demo:
  +schema: staging 
    
    

